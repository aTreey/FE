
ID选择器
#box {
    background-color: red;
}

/* class选择器 */
/* 类选择器可以作用于多个 HTML 标签 */

/* p {
    color: red;
} */

.first {
    font-weight: bold;
    text-decoration: line-through;
}

li {
    color: rgb(41, 8, 185);
}

#second {
    color: blue;
}

/*  通用选择器 */

/* * {
    margin: 0;
    padding: 0;
} */

/* 属性选择器 */
/*匹配属性为 "lefe"的元素*/
[left] {
    color: green;
}

/*匹配所有使用属性为 "lefe"，且值为 liquid 的元素*/
[left='liquid'] {
    background-color: goldenrod;
}

/*匹配所有使用属性为 "lefe"，且值包含 spicy 的元素*/
[left~='spicy'] {
    color: rebeccapurple;
}

a {
    color: purple;
    font-weight: bold;
}

a:visited {
    color: blue;
}

a:hover,
a:focus,
a:active {
    color: palevioletred;
    text-decoration: underline;
}

/* 伪元素（pseudo-elements）选择器，它以“ :: ” 为标识符。比如修改首字母的样式 */
p::first-letter {
    font-weight: bold;
}

p::first-line {
    font-size: 3em;
}

[href^=http]::after {
    content: '⤴';
}

/* 找出div中包含p元素的标签 */
/* div p {
    color: red;
} */

/* A > B {} : A 元素的直接子节点会起作用，也就是只适用于 A 节点的第一层所有的子节点 */
/* div > p {
    color: red;
} */

/* A + B {} : 匹配 A 的下一个兄弟节点，AB具有相同的父节点，并且 B 紧跟在 A 的后面；例子中 div + p { } 只会匹配 div 的下一个兄弟节点 p */
/* div + p {
    color: red;
} */

/* A ~ B {} : B是 A 之后的任意一个兄弟节点。例子中 div ~ p { } 会匹配 div 的所有兄弟节点 p */
/* div ~ p {
    color: red;
} */

/* 组选择器 A, B：A 和 B 元素具有同一规则的 CSS 样式，不同元素使用逗号隔开 */
div,p {
    color: red;
}

/* @规则在CSS中用于传递元数据、条件信息或其他描述性信息 */

@media (min-width: 801px) {
    body{
        margin: 0 auto;
        width: 800px;
    }
}